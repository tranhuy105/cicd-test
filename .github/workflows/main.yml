name: Build & deploy Spring app

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    name: Build and deploy app
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test
          POSTGRES_USER: huy
          POSTGRES_PASSWORD: huy
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: maven

      - name: Configure application properties
        run: |
          echo "spring.datasource.url=jdbc:postgresql://localhost:5432/test" >> src/main/resources/application.properties
          echo "spring.datasource.username=huy" >> src/main/resources/application.properties
          echo "spring.datasource.password=huy" >> src/main/resources/application.properties

      - name: Set up PostgreSQL database
        run: |
          # Wait for PostgreSQL to start
          until nc -z localhost 5432; do
            echo "Waiting for PostgreSQL to start..."
            sleep 1
          done
          # Initialize database schema and data (replace with your initialization script)
          psql -h localhost -U huy -d test -f src/main/resources/schema.sql
          
      - name: Run tests
        run: mvn test

      - name: Cleanup PostgreSQL database service
        run: docker stop postgres && docker rm postgres
        if: always()  # Ensure this step runs even if previous steps fail


